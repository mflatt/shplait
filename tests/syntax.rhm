#lang shplait

check:
  '1 + 2'
  ~is '1 + 2'


check:
  syntax_split('1 2 3')
  ~is ['1', '2', '3']

check:
  syntax_split('1 2 3
                4 5')
  ~is ['1 2 3', '4 5']

check:
  syntax_split('(1 2 3)')
  ~is ['(1 2 3)']

check:
  syntax_join(['1', '2', '3'])
  ~is '1 2 3'

check:
  syntax_join(['1', '2', '3'])
  ~is '1 2 3'

check:
  syntax_join(['1', '2 4', '3'])
  ~is '1; 2 4; 3'

check:
  syntax_join(['1', '2; 4', '3 5'])
  ~is '1; 2; 4; 3 5'


check:
  syntax_is_symbol('x')
  ~is #true

check:
  syntax_is_symbol('1')
  ~is #false

check:
  syntax_to_symbol('x')
  ~is #'x

check:
  symbol_to_syntax(#'x)
  ~is 'x'


check:
  syntax_is_integer('1')
  ~is #true

check:
  syntax_is_integer('#true')
  ~is #false

check:
  syntax_to_integer('1')
  ~is 1

check:
  integer_to_syntax(1)
  ~is '1'


check:
  syntax_is_boolean('#false')
  ~is #true

check:
  syntax_is_boolean('1')
  ~is #false

check:
  syntax_to_boolean('#false')
  ~is #false

check:
  boolean_to_syntax(#false)
  ~is '#false'


check:
  syntax_is_operator('+')
  ~is #true

check:
  syntax_is_operator('x')
  ~is #false

check:
  syntax_operator_to_symbol('+')
  ~is #'#{+}

check:
  symbol_to_operator_syntax(#'#{+})
  ~is '+'


check:
  syntax_is_list('1 2 3')
  ~is #false

check:
  syntax_is_list('[1, 2 3, a]')
  ~is #true

check:
  syntax_to_list('[1, 2 3, a]')
  ~is ['1', '2 3', 'a']

check:
  list_to_syntax(['1', '2; 3', 'a'])
  ~throws "list element is not a group"


check:
  syntax_is_parens('[1, 2, 3]')
  ~is #false

check:
  syntax_is_parens('(1, 2 3, a)')
  ~is #true

check:
  syntax_parens_to_list('(1, 2 3, a)')
  ~is ['1', '2 3', 'a']

check:
  list_to_parens_syntax(['1', '2 3', 'a'])
  ~is '(1, 2 3, a)'

check:
  list_to_parens_syntax(['1', '2; 3', 'a'])
  ~throws "list element is not a group"


check:
  syntax_is_braces('[1, 2, 3]')
  ~is #false

check:
  syntax_is_braces('{1, 2 3, a}')
  ~is #true

check:
  syntax_braces_to_list('{1, 2 3, a}')
  ~is ['1', '2 3', 'a']

check:
  list_to_braces_syntax(['1', '2 3', 'a'])
  ~is '{1, 2 3, a}'

check:
  list_to_braces_syntax(['1', '2; 3', 'a'])
  ~throws "list element is not a group"


check:
  syntax_is_quotes('[1, 2, 3]')
  ~is #false

check:
  syntax_is_quotes('«'1; 2; 3'»')
  ~is #true

check:
  syntax_quotes_to_list('«'1; 2 3; a'»')
  ~is ['1', '2 3', 'a']

check:
  list_to_quotes_syntax(['1', '2 3', 'a'])
  ~is '«'1; 2 3; a'»'

check:
  list_to_quotes_syntax(['1', '2; 3', 'a'])
  ~throws "list element is not a group"


check:
  syntax_is_block('[1, 2, 3]')
  ~is #false

check:
  syntax_is_block(':1
                    2 3
                    a')
  ~is #true

check:
  syntax_block_to_list(': 1
                          2 3
                          a')
  ~is ['1', '2 3', 'a']

check:
  list_to_block_syntax(['1', '2 3', 'a'])
  ~is ': 1
         2 3
         a'

check:
  list_to_block_syntax(['1', '2; 3', 'a'])
  ~throws "list element is not a group"


check:
  syntax_is_alts('[1, 2, 3]')
  ~is #false

check:
  syntax_is_alts('| 1
                    2 3
                  | a')
  ~is #true

check:
  syntax_alts_to_list('| 1
                         2 3
                       | a')
  ~is [': 1; 2 3', ': a']

check:
  list_to_alts_syntax([': 1; 2 3', ': a'])
  ~is '| 1
         2 3
       | a'

check:
  list_to_alts_syntax([': 1', '2', ': a'])
  ~throws "list element is not a block"


check:
  syntax_groups_to_list('')
  ~is []

check:
  syntax_groups_to_list('1
                         2 3')
  ~is ['1', '2 3']

check:
  list_to_groups_syntax(['1', '2 3'])
  ~is '1
       2 3'

check:
  list_to_groups_syntax(['1', '2; 3'])
  ~throws "list element is not a group"


check:
  syntax_group_to_list('1 2')
  ~is ['1', '2']

check:
  list_to_group_syntax(['1', '2'])
  ~is '1 2'

check:
  list_to_group_syntax(['1', '2 3'])
  ~throws "list element is not a term"
